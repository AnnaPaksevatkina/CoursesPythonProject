# Lesson 46
# Реализуйте функцию say_hurray_three_times(), которая возвращает строку 'hurray! hurray! hurray!'.

def say_hurray_three_times():
    word = 'hurray!'
    return f'{word} {word} {word}'

# Lesson 47
# Допишите функцию truncate(), которая обрезает переданную строку до указанного количества символов,
# добавляет в конце троеточие и возвращает получившуюся строку.
# Подобная логика часто используется на сайтах, чтобы отобразить длинный текст в сокращенном виде.
# Функция принимает два параметра:
# Строка, которую нужно обрезать
# Число символов, которые нужно оставить
# Пример того, как должна работать написанная вами функция:
# Передаём текст напрямую
# Обрезаем текст, оставляя 2 символа
# truncate('hexlet', 2)  # 'he...'
# Через переменную
# text = 'it works!'
# # Обрезаем текст, оставляя 4 символа
# truncate(text, 4)  # 'it w...'
# Выполнить задание можно различными способами, подскажем лишь один из них.
# Для решения этим способом вам понадобится взять подстроку из строки, переданной первым параметром в функцию.
# Используйте для этого срезы строк. Подумайте, исходя из задания, с какого индекса и по какой вам надо извлечь подстроку?

def truncate(text, length):
    result = f"{text[0:length]}..."
    return result

# Lesson 48
# Реализуйте функцию get_hidden_card(), который принимает на вход номер кредитки (состоящий из 16 цифр) в виде строки
# и возвращает его скрытую версию, которая может использоваться на сайте для отображения.
# Если исходная карта имела номер 2034399002125581, то скрытая версия выглядит так ****5581.
# Другими словами, функция заменяет первые 12 символов, на звездочки.
# Количество звездочек регулируется вторым, необязательным, параметром. Значение по умолчанию — 4.
# Кредитка передается внутрь как строка
# Второй параметр не передается, значит звездочек будет 4
# get_hidden_card('1234567812345678') # ****5678
# get_hidden_card('1234567812345678', 2) # **5678
# get_hidden_card('1234567812345678', 3) # ***5678
# Или используя переменные
# card_number = '2034399002121100'
# get_hidden_card(card_number) # ****1100
# get_hidden_card(card_number, 1) # *1100
# Для выполнения задания вам понадобится механизм повторения строк, который повторяет строку указанное количество раз.
# Для этого достаточно умножить строку на число повторений:
# '+' * 5 # +++++
# 'o' * 3 # ooo

def get_hidden_card(card_number, stars_count=4):
    visible_digits_line = card_number[-4:]
    return f"{'*' * stars_count}{visible_digits_line}"